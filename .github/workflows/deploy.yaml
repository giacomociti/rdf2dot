name: Deploy and Publish

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['master', 'pages']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist repository
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Get local version (rdf2dot)
        id: local_version_rdf2dot
        run: echo "version=$(jq -r .version packages/rdf2dot/package.json)" >> $GITHUB_OUTPUT

      - name: Get published version (rdf2dot)
        id: published_version_rdf2dot
        run: echo "version=$(npm view rdf2dot version || echo 0.0.0)" >> $GITHUB_OUTPUT

      - name: Get local version (rdf2dot-wc)
        id: local_version_rdf2dot_wc
        run: echo "version=$(jq -r .version packages/rdf2dot-wc/package.json)" >> $GITHUB_OUTPUT

      - name: Get published version (rdf2dot-wc)
        id: published_version_rdf2dot_wc
        run: echo "version=$(npm view rdf2dot-wc version || echo 0.0.0)" >> $GITHUB_OUTPUT

      - name: Configure npm for publishing
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish rdf2dot-wc to npm
        if: steps.local_version.outputs.version != steps.published_version.outputs.version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd dist/rdf2dot-wc
          npm publish --access public

      - name: Publish rdf2dot to npm
        if: steps.local_version.outputs.version != steps.published_version.outputs.version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd packages/rdf2dot
          npm publish --access public