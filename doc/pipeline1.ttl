@base <http://example.org/pipeline/>.
@prefix p: <https://pipeline.described.at/>.
@prefix code: <https://code.described.at/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

#
# Default variables
#

<defaultVars>
  p:variable [ a p:Variable;
    p:name "inputFile";
    p:value "./input.nt"
  ],
  [ a p:Variable;
    p:name "storeFile";
    p:value "./store.nt"
  ],
  [ a p:Variable;
    p:name "versionFile";
    p:value "./version.nt"
  ].

#
# Pipelines
#

<createVersionFile> a p:Pipeline;
  p:variables <defaultVars>;
  p:steps [
    p:stepList (
      <merge>
      <toDatasetBySubject>
      <compare>
      <flatten>
      <serialize>
      <writeVersionFile>
    )
  ].

<merge> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <file:../lib/merge.js#mergeSortedBySubject>
  ];
  code:arguments (
    <inputOrganizations>
    <storedOrganizations>
  ).

<compare> a p:Step ;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:barnard59-base/map.js#default>
  ];
  code:arguments ([ a code:EcmaScriptModule;
     code:link <file:../lib/compare.js#compare>
  ]).

<inputOrganizations> a p:Pipeline, p:ReadableObjectMode;
  p:variables <defaultVars>;
  p:steps [
    p:stepList (
      <readInputFile>
      <parseN3>
    )
  ].

<storedOrganizations> a p:Pipeline, p:ReadableObjectMode;
  p:variables <defaultVars>;
  p:steps [
    p:stepList (
      <readStoreFile>
      <parseN3>
    )
  ].

<readInputFile> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:fs#createReadStream>
  ];
  code:arguments ("inputFile"^^p:VariableName).

<readStoreFile> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:fs#createReadStream>
  ];
  code:arguments ("storeFile"^^p:VariableName).

<parseN3> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:barnard59-formats/n3.js#parse>
  ].

<toDatasetBySubject> a p:Step;
  code:implementedBy [ a code:EcmaScript;
    code:link <node:rdf-stream-to-dataset-stream/bySubject.js>
  ].

<flatten> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:barnard59-base/flatten.js#default>;
  ].

<serialize> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:barnard59-formats/ntriples.js#serialize>
  ].

<writeVersionFile> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:fs#createWriteStream>
  ];
  code:arguments ("versionFile"^^p:VariableName).
