@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix v: <http://view/> .
@prefix attr: <http://view/dot/attribute/> .
@prefix schema: <http://schema.org/> .
@prefix vl: <https://version.link/> .

{} => { v:graph attr:rankdir "LR" } .


{ ?v a vl:Version } => { ?v a v:Node }.
{ ?v a vl:Deprecated } => { ?v attr:color "red" } .

{ 
    ?v vl:successor ?succ . ?succ schema:startDate ?date . 
    (?d ?t) log:dtlit ?date .
}
=>
{
    [] a v:Edge ; v:source ?v ; v:target ?succ ; attr:label ?d
}.




# collect language literal properties as node fields
{ 
    ?s a vl:Version .
    ?s ?p ?o .
    (?fieldValue ?lang) log:langlit ?o . # ensure is literal

    (   ?fieldValue
        ("&" "<" ">" '"') 
        ("&amp;" "&lt;" "&gt;" "&quot;")
    ) string:replaceAll ?escapedValue .

    ?p log:localName ?fieldName .
    ( "<TR><TD><I>%s (%s)</I></TD><TD>%s</TD></TR>" ?fieldName ?lang ?escapedValue) string:format ?field
} 
=> 
{ 
    ?s v:field ?field ;
} .

{ 
    ?v a vl:Version ; schema:parentOrganization ?parent. 
    ?parent log:uri ?parentUri .
     ( "<TR><TD><I>parentOrganization</I></TD><TD>%s</TD></TR>" ?parentUri) string:format ?field
}
=>
{
    ?v v:field ?field
}.

# if a node has some fields, shape it as a table with the fields as rows
{
    ?s a v:Node .
    ( ?f { ?s v:field ?f } ?fs ) log:collectAllIn [] .
    ?fs log:notEqualTo () .
    (?fs "\n") string:join ?joined .
    ( '< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">\n%s\n</TABLE> >' ?joined) string:format ?label
}
=>
{
    ?s attr:shape "plaintext" .
    ?s attr:label ?label
}
.

